<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- the targets to write to -->
  <targets async="true">
    <!-- write logs to file  -->
    <target  xsi:type="File" name="allfile" fileName="logs\nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="logs\nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
    
    <!--for reference https://stackoverflow.com/questions/35058029/how-to-integrate-nlog-to-write-log-to-azure-streaming-log-->
    <target name="traceAndAzureStreamingLog" xsi:type="Trace"
             layout="${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}"/>

    <!--target for SqlLite-->
    <target name="db_SQLLite" xsi:type="Database"
        keepConnection="false"
        useTransactions="false"
        dbProvider="System.Data.SQLite.SQLiteConnection, System.Data.SQLite"
        connectionString="Data Source=${BaseDir}..\..\..\DataSources\Configuration\NSGHSM_Configuration.db;Version=3;"
        commandType="Text"
        commandText="INSERT into Log(Timestamp, Loglevel, Callsite, Message, Exception) values(@Timestamp, @Loglevel, @Callsite, @Message,@Exception)" >
      <parameter name="@Timestamp" layout="${longdate}"/>
      <parameter name="@Loglevel" layout="${level:uppercase=true}"/>
      <parameter name="@Callsite" layout="${callsite:filename=true}"/>
      <parameter name="@Message" layout="${message}"/>
      <parameter name="@Exception" layout="${exception:tostring}" />
    </target>


    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />
    
    <!-- db target to sql lite disabled because it conflicts with AlwaysRecreate settings in app.settings.development.json -->
    <!-- If enables the AlwaysRecreate feature will fail to delete previous database because the database is used by Nlog -->
    <!--<logger name="*" minlevel="Trace" writeTo="db_SQLLite" />-->
    
    <!--<logger name="*" minlevel="Trace" writeTo="traceAndAzureStreamingLog" />-->

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  </rules>
</nlog>
